scopeName: 'source.organized'
name: 'Organized'
fileTypes: [
  'org'
  'org_archive'
  'organized'
]

patterns: [
    { include: "#headers" }
    { include: "#starlines" }
    { include: "#othertextcontent"}
    { include: "#textheaders"}
]

repository:
  headers:
    patterns: [
      {
        name: 'constant.headername.organized'
        match: '^#\\+(?!BEGIN_SRC)[^:]+:'
      }
    ]
  starlines:
    patterns: [
      {
        #This pattern includes the entire star line
        name: 'meta.starline.organized'
        #match: '^(\\s*)([-+\\*]+ .*)$'
        match: '^(\\s*)([\\-\\+\\*]+|\\d+\\.)( .*)$'
        captures: {
          1:
              name: 'whitespace.starline.organized'
          2:
              name: 'symbol.starline.organized'
          3:
              patterns: [
                { include: "#startextcontent" }
              ]
        }
      }
    ]
  startextcontent:
    name: 'startextcontent.organized'
    patterns:[
      {
        name: 'todo.organized'
        match: "\\[TODO\\]"
      },
      {
        name: 'todo.organized'
        match: "TODO"
      },
      {
        name: 'completed.organized'
        match: "\\[(COMPLETED|DONE)\\]"
      },
      {
        name: 'completed.organized'
        match: "COMPLETED|DONE"
      },
      {
        name: 'priority.organized'
        match: '\\[#[A-E]\\]'
      },
      {
        name: 'tags.organized'
        match: ":([^: ]+:){1,}"
      },
      { include: "#textcontent" }
    ]
  textheaders:
    patterns: [
      {
        name: 'header.level1'
        match: '^\s*(#)([^#].*)(\s*#\s*)?$'
        captures:
          1:
            name: 'header.level1.symbol'
          2:
            name: 'header.level1.line'
          3:
            name: 'header.level1.symbol'
      },
      {
        name: 'header.level2'
        match: '^\s*(##)([^#].*)(\s*##\s*)?$'
        captures:
          1:
            name: 'header.level2.symbol'
          2:
            name: 'header.level2.line'
          3:
            name: 'header.level2.symbol'
      },
      {
        name: 'header.level3'
        match: '^\s*(###)([^#].*)(\s*###\s*)?$'
        captures:
          1:
            name: 'header.level3.symbol'
          2:
            name: 'header.level3.line'
          3:
            name: 'header.level3.symbol'
      },
      {
        name: 'header.level4'
        match: '^\s*(####)([^#].*)(\s*####\s*)?$'
        captures:
          1:
            name: 'header.level4.symbol'
          2:
            name: 'header.level4.line'
          3:
            name: 'header.level4.symbol'
      },
      {
        name: 'header.level5'
        match: '^\s*(#####)([^#].*)(\s*#####\s*)?$'
        captures:
          1:
            name: 'header.level5.symbol'
          2:
            name: 'header.level5.line'
          3:
            name: 'header.level5.symbol'
      },
      {
        name: 'header.level6'
        match: '^\s*(######)([^#].*)(\s*######\s*)?$'
        captures:
          1:
            name: 'header.level6.symbol'
          2:
            name: 'header.level6.line'
          3:
            name: 'header.level6.symbol'
      }
    ]
  othertextcontent:
    patterns: [
      { include: '#textcontent' },
      {
        name: 'scheduled.meta'
        match: "\s*(SCHEDULED)(:) (\\<)([^\\>]+)(\\>)"
        captures:
          1:
            name: 'tag'
          2:
            name: 'colon'
          3:
            name: 'begintimeblock'
          4:
            name: 'timeblock'
          5:
            name: 'endtimeblock'
      },
      {
        name: 'deadline.meta'
        match: "\s*(DEADLINE)(:) (\\<)([^\\>]+)(\\>)"
        captures:
          1:
            name: 'tag'
          2:
            name: 'colon'
          3:
            name: 'begintimeblock'
          4:
            name: 'timeblock'
          5:
            name: 'endtimeblock'
      }
      {
        name: 'closed.meta'
        match: "\s*(CLOSED)(:) (\\[)([^\\>]+)(\\])"
        captures:
          1:
            name: 'tag'
          2:
            name: 'colon'
          3:
            name: 'begintimeblock'
          4:
            name: 'timeblock'
          5:
            name: 'endtimeblock'
      },
      {
        name: 'properties.block.organized'
        begin: ':(PROPERTIES):'
        contentName: 'properties.organized'
        captures:
          1:
            name: 'properties.organized.blocktag'
        end: ':(END):'
        patterns: [
          { include: '#propertieslist'}
        ]
      },
      {
        name: 'c.code.block.organized'
        begin: '(```|#\\+BEGIN_SRC )(c)(\s|$)'
        captures:
          1:
            name: 'code.block.tag.organized'
          2:
            name: 'code.block.language.organized'
        contentName: "source.c"
        patterns: [
          { include: '#embedded-code' }
          { include: 'source.c' }
        ]
        end: '(```|#\\+END_SRC)'
      },
      {
        name: 'coffee.code.block.organized'
        begin: '(```|#\\+BEGIN_SRC )(coffee|coffeescript)(\s|$)'
        captures:
          1:
            name: 'code.block.tag.organized'
          2:
            name: 'code.block.language.organized'
        contentName: "source.coffee"
        patterns: [
          { include: '#embedded-code' }
          { include: 'source.coffee' }
        ]
        end: '(```|#\\+END_SRC)'
      },
      {
        name: 'cpp.code.block.organized'
        begin: '(```|#\\+BEGIN_SRC )(cpp)(\s|$)'
        captures:
          1:
            name: 'code.block.tag.organized'
          2:
            name: 'code.block.language.organized'
        contentName: "source.cpp"
        patterns: [
          { include: '#embedded-code' }
          { include: 'source.cpp' }
        ]
        end: '(```|#\\+END_SRC)'
      },
      {
        name: 'css.code.block.organized'
        begin: '(```|#\\+BEGIN_SRC )(css)(\s|$)'
        captures:
          1:
            name: 'code.block.tag.organized'
          2:
            name: 'code.block.language.organized'

        contentName: "source.css"
        patterns: [
          { include: '#embedded-code' }
          { include: 'source.css' }
        ]
        end: '(```|#\\+END_SRC)'
      },
      {
        name: 'go.code.block.organized'
        begin: '(```|#\\+BEGIN_SRC )(go|golang)(\s|$)'
        captures:
          1:
            name: 'code.block.tag.organized'
          2:
            name: 'code.block.language.organized'

        contentName: "source.go"
        patterns: [
          { include: '#embedded-code' }
          { include: 'source.go' }
        ]
        end: '```|#\\+END_SRC'
      },
      {
        name: 'html.code.block.organized'
        begin: '(```|#\\+BEGIN_SRC )(html)(\s|$)'
        captures:
          1:
            name: 'code.block.tag.organized'
          2:
            name: 'code.block.language.organized'
        contentName: "source.html"
        patterns: [
          { include: '#embedded-code' }
          { include: 'source.html' }
        ]
        end: '```|#\\+END_SRC'
      },
      {
        name: 'java.code.block.organized'
        begin: '(```|#\\+BEGIN_SRC )(java)(\s|$)'
        captures:
          1:
            name: 'code.block.tag.organized'
          2:
            name: 'code.block.language.organized'
        contentName: "source.java"
        patterns: [
          { include: '#embedded-code' }
          { include: 'source.java' }
        ]
        end: '```|#\\+END_SRC'
      },
      {
        name: 'javascript.code.block.organized'
        begin: '(```|#\\+BEGIN_SRC )(js|javascript)(\s|$)'
        captures:
          1:
            name: 'code.block.tag.organized'
          2:
            name: 'code.block.language.organized'
        contentName: "source.js"
        patterns: [
          { include: '#embedded-code' }
          { include: 'source.js' }
        ]
        end: '```|#\\+END_SRC'
      },
      {
        name: 'less.code.block.organized'
        begin: '(```|#\\+BEGIN_SRC )(less)(\s|$)'
        captures:
          1:
            name: 'code.block.tag.organized'
          2:
            name: 'code.block.language.organized'
        contentName: "source.css.less"
        patterns: [
          { include: '#embedded-code' }
          { include: 'source.css.less' }
        ]
        end: '```|#\\+END_SRC'
      },
      {
        name: 'objc.code.block.organized'
        begin: '(```|#\\+BEGIN_SRC )(objc)(\s|$)'
        captures:
          1:
            name: 'code.block.tag.organized'
          2:
            name: 'code.block.language.organized'
        contentName: "source.objc"
        patterns: [
          { include: '#embedded-code' }
          { include: 'source.objc' }
        ]
        end: '```|#\\+END_SRC'
      },
      {
        name: 'objcpp.code.block.organized'
        begin: '(```|#\\+BEGIN_SRC )(objcpp)(\s|$)'
        captures:
          1:
            name: 'code.block.tag.organized'
          2:
            name: 'code.block.language.organized'
        contentName: "source.objcpp"
        patterns: [
          { include: '#embedded-code' }
          { include: 'source.objcpp' }
        ]
        end: '```|#\\+END_SRC'
      },
      {
        name: 'python.code.block.organized'
        begin: '(```|#\\+BEGIN_SRC )(python)(\s|$)'
        captures:
          1:
            name: 'code.block.tag.organized'
          2:
            name: 'code.block.language.organized'
        contentName: "source.python"
        patterns: [
          { include: '#embedded-code' }
          { include: 'source.python' }
        ]
        end: '```|#\\+END_SRC'
      },
      {
        name: 'php.code.block.organized'
        begin: '(```|#\\+BEGIN_SRC )(php)(\s|$)'
        captures:
          1:
            name: 'code.block.tag.organized'
          2:
            name: 'code.block.language.organized'
        contentName: "source.php"
        patterns: [
          { include: '#embedded-code' }
          { include: 'source.php' }
        ]
        end: '```|#\\+END_SRC'
      },
      {
        name: 'r.code.block.organized'
        begin: '(```|#\\+BEGIN_SRC )(r|R)(\s|$)'
        captures:
          1:
            name: 'code.block.tag.organized'
          2:
            name: 'code.block.language.organized'
        contentName: "source.r"
        patterns: [
          { include: '#embedded-code' }
          { include: 'source.r' }
        ]
        end: '```|#\\+END_SRC'
      },
      {
        name: 'ruby.code.block.organized'
        begin: '(```|#\\+BEGIN_SRC )(ruby)(\s|$)'
        captures:
          1:
            name: 'code.block.tag.organized'
          2:
            name: 'code.block.language.organized'
        contentName: "source.ruby"
        patterns: [
          { include: '#embedded-code' }
          { include: 'source.ruby' }
        ]
        end: '```|#\\+END_SRC'
      },
      {
        name: 'shell.code.block.organized'
        begin: '(```|#\\+BEGIN_SRC )(shell)(\s|$)'
        captures:
          1:
            name: 'code.block.tag.organized'
          2:
            name: 'code.block.language.organized'
        contentName: "source.shell"
        patterns: [
          { include: '#embedded-code' }
          { include: 'source.shell' }
        ]
        end: '```|#\\+END_SRC'
      }
      {
        name: 'sql.code.block.organized'
        begin: '(```|#\\+BEGIN_SRC )(sql|SQL)(\s|$)'
        captures:
          1:
            name: 'code.block.tag.organized'
          2:
            name: 'code.block.language.organized'
        contentName: "source.sql"
        patterns: [
          { include: '#embedded-code' }
          { include: 'source.sql' }
        ]
        end: '```|#\\+END_SRC'
      }
    ]
  propertieslist:
    patterns: [
      {
        name: 'property.organized'
        match: '(:)([^:]+)(:)'
        captures:
          1:
            name: 'property.symbol'
          2:
            name: 'property.name'
      }
    ]
  textcontent:
    patterns: [
      {
        name: 'link.organized'
        match: '(\\[)(?!(TODO|COMPLETED))([^\\[\\]]+)(\\])(\\()([^\\)]+)(\\))'
        captures:
          1:
              name: 'link.brackets.organized'
          3:
              name: 'link.title.organized'
          4:
              name: 'link.brackets.organized'
          5:
              name: 'link.parens.organized'
          6:
              name: 'underline.link.url.organized'
          7:
              name: 'link.parens.organized'
      }
      {
        name: 'border.table.organized'
        match: '\\s*[\\|\\+](\\-*[\\|\\+])+\\s*'
      }
      {
        #Not quite right, but getting there
        #          |            |    ....                 |
        # begin: '(\\|)'
        # beginCaptures:
        #   1:
        #     name: 'border1.table.organized'
        # end: '([^\\-\\+\\|]+)(\\|)'
        #
        # endCaptures:
        #   1:
        #     name: 'row2.table.organized'
        #   2:
        #     name: 'border2.table.organized'

        match: '(\\|)((?:[^\\-\\+\\|]+\\|)+)'
        captures:
          1:
            name: 'border.table.organized'
          2:
            patterns: [
              { include: '#innerTableRow' }
            ]
      }
      {
        match: '___([^_]+)___'
        captures:
          1:
            name: 'bold.underlined.text.organized'
      }
      {
        match: '__([^_]+)__'
        captures:
          1:
            name: 'bold.text.organized'
      }
      {
        match: '_([^_]+)_'
        captures:
          1:
            name: 'underlined.text.organized'
      }
    ]
  innerTableRow:
    patterns: [
      {
        match: '([^\\-\\+\\|]+)(\\|)'
        captures:
          1:
            name: 'row.table.organized'
          2:
            name: 'border.table.organized'
      }
    ]
