{
  "_args": [
    [
      {
        "raw": "/private/var/folders/1h/zf6dbr3x6zdd_yzl1r98ygxm0000gp/T/d-117211-67935-pq5v8m/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/private/var/folders/1h/zf6dbr3x6zdd_yzl1r98ygxm0000gp/T/d-117211-67935-pq5v8m/package.tgz",
        "spec": "/private/var/folders/1h/zf6dbr3x6zdd_yzl1r98ygxm0000gp/T/d-117211-67935-pq5v8m/package.tgz",
        "type": "local"
      },
      "/private/var/folders/1h/zf6dbr3x6zdd_yzl1r98ygxm0000gp/T/apm-install-dir-117211-67935-jwgmet"
    ]
  ],
  "_from": "../d-117211-67935-pq5v8m/package.tgz",
  "_id": "linter-scss-lint@3.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/linter-scss-lint",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/private/var/folders/1h/zf6dbr3x6zdd_yzl1r98ygxm0000gp/T/d-117211-67935-pq5v8m/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/private/var/folders/1h/zf6dbr3x6zdd_yzl1r98ygxm0000gp/T/d-117211-67935-pq5v8m/package.tgz",
    "spec": "/private/var/folders/1h/zf6dbr3x6zdd_yzl1r98ygxm0000gp/T/d-117211-67935-pq5v8m/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-117211-67935-pq5v8m/package.tgz",
  "_shasum": "0b85fc9e18c0a81c31f895fdd16ae55eee8b48aa",
  "_shrinkwrap": null,
  "_spec": "/private/var/folders/1h/zf6dbr3x6zdd_yzl1r98ygxm0000gp/T/d-117211-67935-pq5v8m/package.tgz",
  "_where": "/private/var/folders/1h/zf6dbr3x6zdd_yzl1r98ygxm0000gp/T/apm-install-dir-117211-67935-jwgmet",
  "bugs": {
    "url": "https://github.com/AtomLinter/linter-scss-lint/issues"
  },
  "configSchema": {
    "additionalArguments": {
      "title": "Additional Arguments",
      "type": "string",
      "default": ""
    },
    "disableWhenNoConfigFileInPath": {
      "type": "boolean",
      "default": false,
      "description": "Disable linter when no `.scss-lint.yml` is found in project"
    },
    "executablePath": {
      "title": "Executable Path",
      "type": "string",
      "default": "scss-lint"
    },
    "configName": {
      "title": "Config Name",
      "type": "string",
      "default": ".scss-lint.yml"
    },
    "disableTimeout": {
      "title": "Disable Execution Timeout",
      "type": "boolean",
      "default": false,
      "description": "Exection of `scss-lint` times out after 10 seconds by default, this disables that timeout."
    }
  },
  "dependencies": {
    "atom-linter": "~9.0.0",
    "atom-package-deps": "^4.0.1"
  },
  "description": "Lint SCSS on the fly, using scss-lint",
  "devDependencies": {
    "eslint": "^3.12.0",
    "eslint-config-airbnb-base": "^11.0.0",
    "eslint-plugin-import": "^2.2.0"
  },
  "engines": {
    "atom": ">=1.4.0 <2.0.0"
  },
  "eslintConfig": {
    "extends": "airbnb-base",
    "rules": {
      "global-require": "off",
      "import/no-unresolved": [
        "error",
        {
          "ignore": [
            "atom"
          ]
        }
      ]
    },
    "env": {
      "node": true
    },
    "globals": {
      "atom": true
    }
  },
  "homepage": "https://github.com/AtomLinter/linter-scss-lint#readme",
  "license": "MIT",
  "main": "./lib/init.js",
  "name": "linter-scss-lint",
  "optionalDependencies": {},
  "package-deps": [
    "linter"
  ],
  "providedServices": {
    "linter": {
      "versions": {
        "1.1.0": "provideLinter"
      }
    }
  },
  "readme": "# linter-scss-lint\n\n[![build-status-image]][travis-ci]\n[![dependency-status-image]][david-dm]\n[![package-downloads-image]][atom-package]\n[![package-version-image]][atom-package]\n\nThis linter plugin for [Linter] provides an interface to [scss-lint]. It will be\nused with files that have the \"SCSS\" syntax.\n\n## Installation\n\nThe [Linter] package will be installed for you to provide an interface to this\npackage. If you are using an alternative linter-* consumer feel free to disable\nthe linter package.\n\n### `scss-lint` installation\n\nBefore using this plugin, you must ensure that `scss-lint` is installed on your\nsystem. To install `scss-lint`, do the following:\n\n1.  Install [Ruby].\n\n2.  Install [scss-lint] by typing the following in a terminal:\n\n    ```shell\n    gem install scss_lint\n    ```\n\n    **IMPORTANT**: This plugin requires at least v0.43.2 of [scss-lint].\n\nNow you can proceed to install the linter-scss-lint plugin.\n\n### Plugin installation\n\nTo install this plugin either search for it from within Atom's settings menu\nor run the following command:\n\n```shell\napm install linter-scss-lint\n```\n\n## Settings\n\nYou can configure linter-scss-lint from within Atom's settings menu, or by\nediting `~/.atom/config.cson` file (choose Open Your Config in Atom's menu).\n\nThe following settings are available:\n\n-   `additionalArguments`: Optionally specify additional arguments to be passed\n    to `scss-lint`. For a full list of the arguments, and their description see\n    [the documentation][scss-lint-usage-docs].\n\n-   `disableWhenNoConfigFileInPath`: Disable linter when no `.scss-lint.yml` is\n    found in project.\n\n-   `executablePath`: Defaults to `scss-lint`, allowing the `$PATH` to resolve\n    the correct location. If you need to override this specify the full path to\n    `scss-lint`.\n\n    You can find the full path to `scss-lint` by running `which scss-lint` (or\n    if you're using [rbenv]: `rbenv which scss-lint`).\n\n**Note**: This plugin finds the nearest `.scss-lint.yml` file and will\nautomatically use it if it exists. If it does not, `scss-lint` will run with its\ndefault settings.\n\n## Using a version manager?\n\n### Using [rbenv]\n\nIf you're using [rbenv], you will need to make sure your `$PATH` is set\ncorrectly for Atom. From version 1.7 onwards, Atom provides a normalized\nenvironment so that the correct `$PATH` is available no matter how Atom was\nlaunched.\n\nIf you're running an Atom version that's prior to 1.7, then you can patch the\nenvironment inside `~/.atom/init.coffee`. Add the following line (thanks to\n[ruby-bundler]):\n\n```coffee\nprocess.env.PATH = \"#{process.env.HOME}/.rbenv/shims:#{process.env.HOME}/.rbenv/bin:#{process.env.PATH}\"\n```\n\n### Using [RVM]\n\nIf you're using [RVM] and receiving errors in Atom that indicate `scss-lint`\ncan't be found, you may need to change `/bin` to `/wrappers` in the path that\ngets returned from `which scss-lint` before using it as your `executablePath`\nsetting. For example, change:\n\n```text\n/path/to/rvm/gems/ruby-x.y.z/bin/scss-lint\n```\n\nTo:\n\n```text\n/path/to/rvm/gems/ruby-x.y.z/wrappers/scss-lint\n```\n\n**Note**: You can find the path to your [RVM] installation using `which rvm`.\n\n#### Create a scoped wrapper for Atom\n\nYou could also create a scoped wrapper by running the following command:\n\n```shell\nrvm wrapper current atom scss-lint\n```\n\nNow you need to set the `executablePath` setting to that of the newly generated\nwrapper.\n\n[atom-package]: https://atom.io/packages/linter-scss-lint\n[david-dm]: https://david-dm.org/AtomLinter/linter-scss-lint\n[linter]: https://github.com/AtomLinter/linter \"Linter\"\n[rbenv]: https://github/rbenv/rbenv \"rbenv\"\n[ruby]: https://www.ruby-lang.org \"Ruby\"\n[ruby-bundler]: https://github.com/willcosgrove/atom-ruby-bundler\n[rvm]: https://rvm.io \"RVM\"\n[scss-lint]: https://github.com/brigade/scss-lint \"scss-lint\"\n[scss-lint-usage-docs]: https://github.com/brigade/scss-lint#usage\n[travis-ci]: https://travis-ci.org/AtomLinter/linter-scss-lint\n\n[build-status-image]: https://img.shields.io/travis/AtomLinter/linter-scss-lint/master.svg\n[dependency-status-image]: https://img.shields.io/david/AtomLinter/linter-scss-lint.svg\n[package-downloads-image]: https://img.shields.io/apm/dm/linter-scss-lint.svg\n[package-version-image]: https://img.shields.io/apm/v/linter-scss-lint.svg\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/AtomLinter/linter-scss-lint.git"
  },
  "scripts": {
    "lint": "eslint .",
    "test": "apm test"
  },
  "version": "3.1.0"
}
