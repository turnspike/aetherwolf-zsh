# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on OS X and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * https://atom.io/docs/latest/hacking-atom-debugging#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

# 'atom-workspace':
#   'ctrl-alt-v': 'vim-mode:toggle-enabled'

'atom-workspace atom-text-editor':
  'ctrl-shift-f12': 'user:toggle-vim-mode'
  'ctrl-a': 'editor:move-to-beginning-of-screen-line'
  'ctrl-e': 'editor:move-to-end-of-line'
  'alt-b': 'editor:backward-word'
  'alt-f': 'editor:forward-word'
  'ctrl-alt-b': 'editor:backward-sexp'
  'ctrl-alt-f': 'editor:forward-sexp'
  'alt-{': 'editor:backward-paragraph'
  'alt-}': 'atomic-emacs:forward-paragraph'
  'alt-m': 'atomic-emacs:back-to-indentation'
  'alt-<': 'core:move-to-top'
  'alt->': 'core:move-to-bottom'
